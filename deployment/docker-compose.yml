version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crypto-db
    environment:
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_password
      POSTGRES_DB: crypto_dashboard
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crypto_user -d crypto_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: crypto-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://crypto_user:crypto_password@postgres:5432/crypto_dashboard
      PORT: 3001
    volumes:
      - ../backend/src:/usr/src/app/src
      - ../backend/package.json:/usr/src/app/package.json
      - /usr/src/app/node_modules
    ports:
      - "3001:3001"
    networks:
      - crypto-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: crypto-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001
      CHOKIDAR_USEPOLLING: "true"  # Enable hot reload in Docker
      WATCHPACK_POLLING: "true"     # For webpack file watching
    volumes:
      - ../frontend/src:/usr/src/app/src
      - ../frontend/public:/usr/src/app/public
      - ../frontend/package.json:/usr/src/app/package.json
      - ../frontend/tsconfig.json:/usr/src/app/tsconfig.json
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - crypto-network
    depends_on:
      - backend
    stdin_open: true  # Keep stdin open for interactive mode
    tty: true         # Allocate a pseudo-TTY

volumes:
  postgres_data:
    driver: local

networks:
  crypto-network:
    driver: bridge